Bubble sort

Bubble sort is a simple sorting algorithm. It is simple to understand, so it is used as a training algorithm. It is not used in the real world, since it is not very efficient.

To sort a list of numbers, the bubble sort goes through the list and compares every number to the next one. If those two numbers are in the wrong order, it will swap them. It will repeat this process, going back to the beginning every time it finishes, until the list is fully sorted. Any list of numbers with the length "n" can be sorted in under "n"-1 rounds.

First pass:

Second pass:

Third pass:

This is pass optimized implementation of the algorithm. Obviously, there is no necessity to do passes if array was sorted or became sorted after one of the passes. So in this implementation there is a flag "swapped" which signalize whether was swapped elements in the current pass or not. If not then cycle is ended. In the best case, then array is sorted already, complexity of this implementation is O(n). In the worst case, then array sorted by descending, complexity is O(n).



